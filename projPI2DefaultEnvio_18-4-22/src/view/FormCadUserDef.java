
package view;

import controller.UsuarioDaoDef;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.UsuarioDef;

/**
 *
 * @author Inacio
 */
public class FormCadUserDef extends javax.swing.JDialog {

    public ResultSet resul;

    /**
     * Creates new form FormCadastroDef
     */
    @SuppressWarnings("OverridableMethodCallInConstructor")
    public FormCadUserDef(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.camposBotoesInicioCadastro();
        this.carregarUsers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnBase = new javax.swing.JPanel();
        lblTitleCadastro = new javax.swing.JLabel();
        lblCpf = new javax.swing.JLabel();
        textCpf = new javax.swing.JFormattedTextField();
        btnPesquisar = new javax.swing.JButton();
        lblNome = new javax.swing.JLabel();
        textNome = new javax.swing.JTextField();
        lblTpUser = new javax.swing.JLabel();
        cmbTipoUsers = new javax.swing.JComboBox<>();
        lblEmail = new javax.swing.JLabel();
        textEmail = new javax.swing.JTextField();
        lblCelular = new javax.swing.JLabel();
        textCelular = new javax.swing.JFormattedTextField();
        lblNumRua = new javax.swing.JLabel();
        textRua = new javax.swing.JTextField();
        lblSenha = new javax.swing.JLabel();
        textSenha = new javax.swing.JPasswordField();
        btnNovo = new javax.swing.JButton();
        btnIncluir = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        textNumRua = new javax.swing.JTextField();
        lblRua = new javax.swing.JLabel();
        textComplemento = new javax.swing.JTextField();
        textBairro = new javax.swing.JTextField();
        lblComplemento = new javax.swing.JLabel();
        lblBairro = new javax.swing.JLabel();
        lblCidade = new javax.swing.JLabel();
        lblUf = new javax.swing.JLabel();
        textCidade = new javax.swing.JTextField();
        textEstado = new javax.swing.JTextField();
        btnEditar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCliente = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpnBase.setBackground(new java.awt.Color(0, 68, 111));
        jpnBase.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 60, 0), 5));
        jpnBase.setPreferredSize(new java.awt.Dimension(715, 265));
        jpnBase.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitleCadastro.setForeground(new java.awt.Color(255, 255, 255));
        lblTitleCadastro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitleCadastro.setText("<html><font size = 6><b><u>Cadastro Usuário</b></u></font></html>");
        lblTitleCadastro.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jpnBase.add(lblTitleCadastro, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 740, -1));

        lblCpf.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblCpf.setForeground(new java.awt.Color(255, 255, 255));
        lblCpf.setText("CPF:");
        jpnBase.add(lblCpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 54, -1, -1));

        try {
            textCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jpnBase.add(textCpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 160, 25));

        btnPesquisar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });
        jpnBase.add(btnPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 70, 90, 25));

        lblNome.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblNome.setForeground(new java.awt.Color(255, 255, 255));
        lblNome.setText("NOME:");
        jpnBase.add(lblNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 104, -1, -1));
        jpnBase.add(textNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 340, 25));

        lblTpUser.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTpUser.setForeground(new java.awt.Color(255, 255, 255));
        lblTpUser.setText("TIPO DE USUÁRIO");
        jpnBase.add(lblTpUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(573, 54, -1, -1));

        cmbTipoUsers.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Administrador", "Usuário"}));
        jpnBase.add(cmbTipoUsers, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 70, 144, 25));

        lblEmail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(255, 255, 255));
        lblEmail.setText("EMAIL:");
        lblEmail.setRequestFocusEnabled(false);
        jpnBase.add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 154, -1, -1));

        textEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textEmailActionPerformed(evt);
            }
        });
        jpnBase.add(textEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 340, 25));

        lblCelular.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblCelular.setForeground(new java.awt.Color(255, 255, 255));
        lblCelular.setText("CELULAR:");
        jpnBase.add(lblCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(573, 104, -1, -1));

        try {
            textCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jpnBase.add(textCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, 144, 25));

        lblNumRua.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblNumRua.setForeground(new java.awt.Color(255, 255, 255));
        lblNumRua.setText("Nº");
        jpnBase.add(lblNumRua, new org.netbeans.lib.awtextra.AbsoluteConstraints(637, 204, -1, -1));
        jpnBase.add(textRua, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 440, 25));

        lblSenha.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSenha.setForeground(new java.awt.Color(255, 255, 255));
        lblSenha.setText("SENHA:");
        lblSenha.setRequestFocusEnabled(false);
        jpnBase.add(lblSenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(573, 154, -1, -1));
        jpnBase.add(textSenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 170, 144, 25));

        btnNovo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        jpnBase.add(btnNovo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 90, 25));

        btnIncluir.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnIncluir.setText("Incluir");
        btnIncluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnIncluirMouseClicked(evt);
            }
        });
        jpnBase.add(btnIncluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 90, 25));

        btnExcluir.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        jpnBase.add(btnExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 90, 25));

        btnSair.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        jpnBase.add(btnSair, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 90, 25));
        jpnBase.add(textNumRua, new org.netbeans.lib.awtextra.AbsoluteConstraints(634, 220, 80, 25));

        lblRua.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblRua.setForeground(new java.awt.Color(255, 255, 255));
        lblRua.setText("RUA");
        jpnBase.add(lblRua, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 204, -1, -1));
        jpnBase.add(textComplemento, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 140, 25));
        jpnBase.add(textBairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(334, 270, 380, 25));

        lblComplemento.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblComplemento.setForeground(new java.awt.Color(255, 255, 255));
        lblComplemento.setText("COMPLEMENTO");
        jpnBase.add(lblComplemento, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 254, -1, -1));

        lblBairro.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblBairro.setForeground(new java.awt.Color(255, 255, 255));
        lblBairro.setText("BAIRRO");
        jpnBase.add(lblBairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(337, 254, -1, -1));

        lblCidade.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblCidade.setForeground(new java.awt.Color(255, 255, 255));
        lblCidade.setText("CIDADE");
        jpnBase.add(lblCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 304, -1, -1));

        lblUf.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblUf.setForeground(new java.awt.Color(255, 255, 255));
        lblUf.setText("ESTADO");
        jpnBase.add(lblUf, new org.netbeans.lib.awtextra.AbsoluteConstraints(533, 304, -1, -1));
        jpnBase.add(textCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 320, 335, 25));
        jpnBase.add(textEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 320, 180, 25));

        btnEditar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jpnBase.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 90, 25));

        getContentPane().add(jpnBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 380));

        jPanel2.setBackground(new java.awt.Color(255, 60, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblCliente.setAutoCreateRowSorter(true);
        tblCliente.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        tblCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CPF", "IdNivel", "Nome", "Celular", "Email", "Senha", "Rua", "Nº", "Compl", "Bairro", "Cidade", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCliente.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblCliente.setAutoscrolls(false);
        tblCliente.setColumnSelectionAllowed(true);
        tblCliente.setGridColor(new java.awt.Color(255, 255, 255));
        tblCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClienteMouseClicked(evt);
            }
        });
        tblCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblClienteKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblCliente);
        tblCliente.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tblCliente.getColumnModel().getColumnCount() > 0) {
            tblCliente.getColumnModel().getColumn(0).setPreferredWidth(90);
            tblCliente.getColumnModel().getColumn(1).setPreferredWidth(50);
            tblCliente.getColumnModel().getColumn(2).setPreferredWidth(150);
            tblCliente.getColumnModel().getColumn(3).setPreferredWidth(90);
            tblCliente.getColumnModel().getColumn(4).setPreferredWidth(150);
            tblCliente.getColumnModel().getColumn(5).setPreferredWidth(50);
            tblCliente.getColumnModel().getColumn(6).setPreferredWidth(200);
            tblCliente.getColumnModel().getColumn(7).setPreferredWidth(40);
            tblCliente.getColumnModel().getColumn(8).setPreferredWidth(120);
            tblCliente.getColumnModel().getColumn(9).setPreferredWidth(140);
            tblCliente.getColumnModel().getColumn(10).setPreferredWidth(150);
            tblCliente.getColumnModel().getColumn(11).setPreferredWidth(55);
        }

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 0, 730, 215));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 740, 220));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        this.pesquisarUsers();
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void textEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textEmailActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        this.novoUsers();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnIncluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIncluirMouseClicked
        this.cadastrarUsers();//Cadastra ou salva o que foi alterado
    }//GEN-LAST:event_btnIncluirMouseClicked

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        this.excluirUsers();
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        this.sairUsers();
    }//GEN-LAST:event_btnSairActionPerformed

    private void tblClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClienteMouseClicked
        this.clickJtable();
    }//GEN-LAST:event_tblClienteMouseClicked

    private void tblClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblClienteKeyPressed
        this.clickJtable();
    }//GEN-LAST:event_tblClienteKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        formWindowOpened();
    }//GEN-LAST:event_formWindowOpened

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        this.alterarUsers();
    }//GEN-LAST:event_btnEditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCadUserDef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCadUserDef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCadUserDef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCadUserDef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormCadUserDef dialog = new FormCadUserDef(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSair;
    private javax.swing.JComboBox<String> cmbTipoUsers;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel jpnBase;
    private javax.swing.JLabel lblBairro;
    private javax.swing.JLabel lblCelular;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblComplemento;
    private javax.swing.JLabel lblCpf;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNumRua;
    private javax.swing.JLabel lblRua;
    private javax.swing.JLabel lblSenha;
    private javax.swing.JLabel lblTitleCadastro;
    private javax.swing.JLabel lblTpUser;
    private javax.swing.JLabel lblUf;
    private javax.swing.JTable tblCliente;
    private javax.swing.JTextField textBairro;
    private javax.swing.JFormattedTextField textCelular;
    private javax.swing.JTextField textCidade;
    private javax.swing.JTextField textComplemento;
    private javax.swing.JFormattedTextField textCpf;
    private javax.swing.JTextField textEmail;
    private javax.swing.JTextField textEstado;
    private javax.swing.JTextField textNome;
    private javax.swing.JTextField textNumRua;
    private javax.swing.JTextField textRua;
    private javax.swing.JPasswordField textSenha;
    // End of variables declaration//GEN-END:variables

    private void carregarUsers() {

        // método criado para carregar usua?ios no jtable 
        // do formulário de usuários
        // captura o modelo definido do jtable no formulário de usuários
        DefaultTableModel mytbmodel = (DefaultTableModel) tblCliente.getModel();

        // instancia a classe Usuariodao para executar o método buscartodos()
        UsuarioDaoDef u1 = new UsuarioDaoDef();

        // chama o método para buscar todos os registros da tabela usuário
        // armazena dentro de um objeto ResultSet
        resul = u1.buscartodos();
        try {

            // apagar todas as linhas do Jtable
            while (tblCliente.getModel().getRowCount() > 0) {
                ((DefaultTableModel) tblCliente.getModel()).removeRow(0);
            }
            // laço para pegar os registros retornadas na ResultSet resul
            while (resul.next()) {
                // cria um array para armazenar cada linha com os 4 campos
                // puxados da tabela resul de usuários

                Object[] linhas = {
                    resul.getString("cpf"),
                    resul.getInt("fk_IdNivel"),
                    resul.getString("nome"),
                    resul.getString("celular"),
                    resul.getString("email"),
                    resul.getString("senha"),
                    resul.getString("rua"),
                    resul.getString("numero"),
                    resul.getString("complemento"),
                    resul.getString("bairro"),
                    resul.getString("cidade"),
                    resul.getString("estado")};

                // adiciona uma linha de cada vez no jtable de usua?ios
                mytbmodel.addRow(linhas);
            }

            // posiciona o focus no textcpf 
            this.textCpf.grabFocus();
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(null, err.getMessage());
        }
    }

    private void formWindowOpened() {
        // captura o modelo do combobox para inserir itens
        DefaultComboBoxModel obj;
        obj = (DefaultComboBoxModel) this.cmbTipoUsers.getModel();
        obj.removeAllElements(); // remove todos os elementos do combobox
        obj.addElement(""); // adiciona o primeiro elemento vazio
        obj.addElement("Administrador"); // adiciona o item operador
        obj.addElement("Usuário"); // adiciona o item gerente

        //carregarUsers(); // chama o método carregar_usuarios para preencher o jtable
    }

    //Funções para os botões - INÍCIO
    private void novoUsers() {
        //ativa os campos
        this.limparCampos();
        this.todosCamposAtivos();

        //ativa os botões        
        btnPesquisar.setEnabled(true);
        btnIncluir.setEnabled(true);
        btnSair.setEnabled(true);

        //desativa os botões  
        btnNovo.setEnabled(false);
        btnExcluir.setEnabled(false);
        this.carregarUsers();
    }

    private void cadastrarUsers() {
        //Instancia a Classe "UsuarioProj" e cria o objeto "Lu" - Pacote "Model"
        UsuarioDef cad = new UsuarioDef();

        /*usa o objeto "cad" para adiconar os valores na classe "UsuarioDef" - Pacote "Model"*/
        cad.setCpf(this.textCpf.getText());
        cad.setFk_IdNivel(this.cmbTipoUsers.getSelectedIndex());
        cad.setNome(this.textNome.getText());
        cad.setCelular(this.textCelular.getText());
        cad.setEmail(this.textEmail.getText());
        cad.setSenha(this.textSenha.getText());
        cad.setRua(this.textRua.getText());
        cad.setNumero(this.textNumRua.getText());
        cad.setComplemento(this.textComplemento.getText());
        cad.setBairro(this.textBairro.getText());
        cad.setCidade(this.textCidade.getText());
        cad.setEstado(this.textEstado.getText());

        //Instancia a Classe "UsuarioDaoProj"
        UsuarioDaoDef u1 = new UsuarioDaoDef();
        //executa a função "incluir" da classe "UsuarioDaoProj"
        u1.incluir(cad);// se não existir chama o u1.incluir()
        this.carregarUsers();
        this.camposBotoesInicioCadastro();

        this.limparCampos();
        this.textNome.grabFocus(); //coloca o cursor no campo nome        
    }

    private void alterarUsers() {
        //Instancia a Classe "UsuarioProj" e cria o objeto "Lu" - Pacote "Model"
        UsuarioDef cad = new UsuarioDef();

        /*usa o objeto "cad" para adiconar os valores na classe "UsuarioDef" - Pacote "Model"*/
        cad.setCpf(this.textCpf.getText());
        cad.setFk_IdNivel(this.cmbTipoUsers.getSelectedIndex());
        cad.setNome(this.textNome.getText());
        cad.setCelular(this.textCelular.getText());
        cad.setEmail(this.textEmail.getText());
        cad.setSenha(this.textSenha.getText());
        cad.setRua(this.textRua.getText());
        cad.setNumero(this.textNumRua.getText());
        cad.setComplemento(this.textComplemento.getText());
        cad.setBairro(this.textBairro.getText());
        cad.setCidade(this.textCidade.getText());
        cad.setEstado(this.textEstado.getText());

        //Instancia a Classe "UsuarioDaoProj"
        UsuarioDaoDef u1 = new UsuarioDaoDef();
        //executa a função "incluir" da classe "UsuarioDaoProj"
        /* Para verificar se o usuário existe buscamos o cpf primeiro */
        resul = u1.buscar(cad);
        try {
            if (resul.next()) {
                u1.alterar(cad);// caso exista chama u1.alterar()
                this.carregarUsers();
                this.camposBotoesInicioCadastro();

            } else {                
                this.camposBotoesInicioCadastro();
                btnEditar.setEnabled(false);
            }
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(null,
                    "Erro Cadastrar Users!\n" + err.getMessage());
        }

        this.limparCampos();
        this.textNome.grabFocus(); //coloca o cursor no campo nome        
    }

    private void excluirUsers() {
        Object[] options = {"Sim", "Não"};
        int i = JOptionPane.showOptionDialog(null, "Deseja realmente excluir o registro?", "Aviso",
                JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE,
                null, options, options[0]);
        if (i == 0) {
            UsuarioDaoDef u = new UsuarioDaoDef();
            u.excluir(textCpf.getText());
            this.limparCampos();
            this.textCpf.grabFocus(); //coloca o cursor no campo cpf
            this.carregarUsers();
        }
    }

    private void pesquisarUsers() {
        // instancia a classe UsuarioProj model
        UsuarioDef obj = new UsuarioDef();
        // executa o método setcpf para preencher o cpf
        obj.setCpf(this.textCpf.getText());
        // instancia o objeto Controller UsarioDaoProj
        UsuarioDaoDef u1 = new UsuarioDaoDef();
        // executa o método buscar e coloca os registros dentro
        // do ResultSet resul
        resul = u1.buscar(obj);
        try {
            if (resul.next()) {
                // se o registro foi encontrado preenche os campos do formulário usuários
                this.cmbTipoUsers.setSelectedIndex(resul.getInt("fk_IdNivel"));
                this.textNome.setText(resul.getString("nome"));
                this.textCelular.setText(resul.getString("celular"));
                this.textEmail.setText(resul.getString("email"));
                this.textSenha.setText(resul.getString("senha"));
                this.textRua.setText(resul.getString("rua"));
                this.textNumRua.setText(resul.getString("numero"));
                this.textComplemento.setText(resul.getString("complemento"));
                this.textBairro.setText(resul.getString("bairro"));
                this.textCidade.setText(resul.getString("cidade"));
                this.textEstado.setText(resul.getString("estado"));

                this.todosCamposAtivos();
                
                //ativa os botões 
                btnExcluir.setEnabled(true);
                btnEditar.setEnabled(true);
                btnSair.setEnabled(true);
                btnPesquisar.setEnabled(true);

                //desativa os botões
                btnNovo.setEnabled(false);
                btnIncluir.setEnabled(false);

            } else {
                JOptionPane.showMessageDialog(null, "Registro não encontrado!");
                this.textCpf.grabFocus();
            }
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(null, err.getMessage());
        }
    }

    private void clickJtable() {
        /* busca a linha selecionada no jTable1 */
        int linhasel = this.tblCliente.getSelectedRow();
        int colunachave = 0; // configura coluna como 0,isto é, a primeira coluna
        Object chave = this.tblCliente.getModel().getValueAt(linhasel, colunachave);

        /* Informações Relevantes sobre capturar dados do Jcombobox:
        Pegar pelo índice : this.cmbTipoUsers.setSelectedIndex(resul.getInt("fk_IdNivel"));
        Pegar pelo item : this.cmbTipoUsers.setSelectedItem("Operador");
        Número da linha : this.cmbTipoUsers.setSelectedIndex(jTable1.getSelectedRow());*/
        UsuarioDef obj = new UsuarioDef();
        obj.setCpf((String) chave);
        UsuarioDaoDef u1 = new UsuarioDaoDef();
        resul = u1.buscar(obj);
        try {
            if (resul.next()) {
                this.textCpf.setText(resul.getString("cpf"));
                this.cmbTipoUsers.setSelectedIndex(resul.getInt("fk_IdNivel"));
                this.textNome.setText(resul.getString("nome"));
                this.textCelular.setText(resul.getString("celular"));
                this.textEmail.setText(resul.getString("email"));
                this.textSenha.setText(resul.getString("senha"));
                this.textRua.setText(resul.getString("rua"));
                this.textNumRua.setText(resul.getString("numero"));
                this.textComplemento.setText(resul.getString("complemento"));
                this.textBairro.setText(resul.getString("bairro"));
                this.textCidade.setText(resul.getString("cidade"));
                this.textEstado.setText(resul.getString("estado"));

                this.todosCamposAtivos();

                btnEditar.setEnabled(true);
                btnExcluir.setEnabled(true);
                btnNovo.setEnabled(true);
                
                btnIncluir.setEnabled(false);
            } else {
                JOptionPane.showMessageDialog(null, "Registro não encontrado!");
                //this.textCpf.grabFocus();
            }
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(null, "Erro ao navegar na Jtable! ");
        }
    }

    private void sairUsers() {
        Object[] options = {"Sim", "Não"};
        int i = JOptionPane.showOptionDialog(null, "Deseja realmente sair?", "Aviso",
                JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE,
                null, options, options[0]);
        if (i == 0) {
            dispose();
        }
    }
    //Funções para os botões - FIM

    public void limparCampos() {
        this.textCpf.setText(""); //limpar
        this.cmbTipoUsers.setSelectedIndex(0); // limpar
        this.textNome.setText(""); // limpar
        this.textCelular.setText(""); // limpar
        this.textEmail.setText(""); // limpar
        this.textSenha.setText(""); // limpar        
        this.textRua.setText(""); // limpar
        this.textNumRua.setText(""); // limpar
        this.textComplemento.setText(""); // limpar
        this.textBairro.setText(""); // limpar
        this.textCidade.setText(""); // limpar
        this.textEstado.setText(""); // limpar
    }

    public void todosCamposAtivos() {
        this.textCpf.setEnabled(true);
        this.cmbTipoUsers.setEnabled(true);
        this.textNome.setEnabled(true);
        this.textCelular.setEnabled(true);
        this.textEmail.setEnabled(true);
        this.textSenha.setEnabled(true);
        this.textRua.setEnabled(true);
        this.textNumRua.setEnabled(true);
        this.textComplemento.setEnabled(true);
        this.textBairro.setEnabled(true);
        this.textCidade.setEnabled(true);
        this.textEstado.setEnabled(true);

        //this.textCpf.grabFocus(); //coloca o cursor no campo cpf
    }

    public void camposBotoesInicioCadastro() {
        //campos
        this.textCpf.setEnabled(true);
        this.cmbTipoUsers.setEnabled(false);
        this.textNome.setEnabled(false);
        this.textCelular.setEnabled(false);
        this.textEmail.setEnabled(false);
        this.textSenha.setEnabled(false);
        this.textRua.setEnabled(false);
        this.textNumRua.setEnabled(false);
        this.textComplemento.setEnabled(false);
        this.textBairro.setEnabled(false);
        this.textCidade.setEnabled(false);
        this.textEstado.setEnabled(false);

        //botões
        btnNovo.setEnabled(true);
        btnPesquisar.setEnabled(true);
        btnSair.setEnabled(true);

        btnIncluir.setEnabled(false);
        btnExcluir.setEnabled(false);
        btnEditar.setEnabled(false);

        this.textCpf.grabFocus(); //coloca o cursor no campo cpf
    }

    public void todosBotoesAtivos() {
        btnNovo.setEnabled(true);
        btnIncluir.setEnabled(true);
        btnPesquisar.setEnabled(true);
        btnExcluir.setEnabled(true);
        btnSair.setEnabled(true);
    }

}
